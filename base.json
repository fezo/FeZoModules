{"identifier": "com_fezo_base", "version": "0.9", "includes": [], "definitions":
    {
        "categories": {
            "com_fezo_types_project": {
                "identifier": "com_fezo_types_project",
                "name": "Project",
                "allowed": ["com_fezo_types_scene"]
            },
            "com_fezo_types_scene": {
                "identifier": "com_fezo_types_scene",
                "name": "Scene",
                "allowed": ["com_fezo_types_class"]
            },
            "com_fezo_types_class": {
                "identifier": "com_fezo_types_class",
                "name": "Class",
                "allowed": ["com_fezo_types_class"]
            },
            "com_fezo_types_controller": {
                "identifier": "com_fezo_types_controller",
                "name": "Class",
                "allowed": ["com_fezo_types_controller"]
            }
        },
        "toolboxes": {
            "com_fezo_toolbox_controller_params": {
                "identifier": "com_fezo_toolbox_controller_params",
                "name": "Controller Params",
                "image": "/images/toolbox/icon-param.png"
            },
            "com_fezo_toolbox_controller_constants": {
                "identifier": "com_fezo_toolbox_controller_constants",
                "name": "Controller Constants",
                "image": "/images/toolbox/icon-constant.png"
            },
            "com_fezo_toolbox_conditional": {
                "identifier": "com_fezo_toolbox_conditional",
                "name": "Conditional",
                "image": "/images/toolbox/icon-conditional.png"
            },
            "com_fezo_toolbox_math": {
                "identifier": "com_fezo_toolbox_math",
                "name": "Math",
                "image": "/images/toolbox/icon-number-constant.png"
            },
            "com_fezo_toolbox_string": {
                "identifier": "com_fezo_toolbox_string",
                "name": "String",
                "image": "/images/toolbox/icon-string.png"
            },
            "com_fezo_toolbox_collections": {
                "identifier": "com_fezo_toolbox_collections",
                "name": "Collections",
                "image": "/images/toolbox/icon-collection.png"
            },
            "com_fezo_toolbox_time": {
                "identifier": "com_fezo_toolbox_time",
                "name": "Time",
                "image": "/images/toolbox/icon-time.png"
            },
            "com_fezo_toolbox_fezo_project": {
                "identifier": "com_fezo_toolbox_fezo_project",
                "name": "FeZo Project",
                "image": "/images/toolbox/icon-ui.png"
            }
        },
        "classes": {
            "com_fezo_types_class_canvas_image": {
                "category": "com_fezo_types_class",
                "description": "Draws a 2D image.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_image",
                    "name": "Image",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 128
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 128
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_image must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            var asset = this.get("image");
                            
                            fezo.countTest = 0;
                            var image;
                            if(asset.match("http://|www.|data:|file:") === null){
                                image = fezo.assetManager.get(asset, "com_fezo_types_class_canvas_image");
                                if(!this.__hasLoaded){
                                    this.__hasLoaded = true;
                                    this.runControllerGroup("onLoad", []);
                                }
                                    
                            } else {
                                if(this.get("load")){                                    
                                    this.set("load", false);
                                    var that = this;
                                    var assetId = fezo.assetManager.add(asset, "image");
                                    this.set("image", assetId);
                                    fezo.assetManager.load(assetId, function(){
                                        this.__hasLoaded = true;
                                        that.runControllerGroup("onLoad", []);
                                    });
                                }
                            }
                            
                            if (!image) {
                                width = 128;
                                height = 128;
                                image = fezo.assetManager.get("default", "com_fezo_types_class_canvas_image");
                            }
                            scene.context2d.drawImage(image, 0, 0, width, height);
                        }
                    },
                    "properties": [
                    {
                        "name": "image",
                        "type": "asset",
                        "default": ""
                    },
                    {
                        "name": "load",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_image",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_image",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_image",
                            "nodes": {}
                        },
                        "onLoad": {
                            "id": createGUID(),
                            "name": "onLoad",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_image",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_rect": {
                "category": "com_fezo_types_class",
                "description": "Draws a 2D rectangle.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_rect",
                    "name": "Rect",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 100
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 100
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_image must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");

                            var strokeWidth = parseInt(this.get("stroke_width"));
                            var fillColor = this.get("fill_color");
                            var borderColor = this.get("border_color");

                            scene.context2d.beginPath();
                            scene.context2d.rect(0, 0, width, height);
                            scene.context2d.fillStyle = "rgba(" + fillColor.r + "," + fillColor.g + "," + fillColor.b + "," + fillColor.a + ")";
                            scene.context2d.fill();
                            scene.context2d.lineWidth = strokeWidth;
                            scene.context2d.strokeStyle = "rgba(" + borderColor.r + "," + borderColor.g + "," + borderColor.b + "," + borderColor.a + ")";
                            scene.context2d.stroke();
                        }
                    },
                    "properties": [
                    {
                        "name": "number_sides",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "stroke_width",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "fill_color",
                        "type": "color",
                        "default": {
                            "r": 255,
                            "g": 255,
                            "b": 255,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "border_color",
                        "type": "color",
                        "default": {
                            "r": 0,
                            "g": 0,
                            "b": 0,
                            "a": 1.0
                        }
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_rect",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_rect",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_rect",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_label": {
                "category": "com_fezo_types_class",
                "description": "Draws 2D text label.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_label",
                    "name": "Label",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 92
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 12
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            var model = this;
                            this.text.change(function(e) {
                                var modelWidth = model.text.textWidth();
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_canvas_label", "text", model.text.getText());
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "width", modelWidth);
                                if (fezo.selectedModel === model) {
                                    var divs = document.getElementsByClassName("edgesDiv");
                                    if (divs.length > 0) {
                                        var edgesDiv1 = divs[0];
                                        var divs2 = document.getElementsByClassName("edgesDiv2");
                                        var edgesDiv2 = divs2[0];
                                        if (edgesDiv1 == edgesDiv2) {
                                            edgesDiv1 = divs[1];
                                        }
                                        edgesDiv1.style.width = (modelWidth + 4) + "px";
                                        edgesDiv2.style.width = (modelWidth + 2) + "px";
                                    }
                                }
                            });
                        },
                        "setup": function() {
                            this.text = new UIText(fezo.scene.context2d);
                            var that = this;
                            this.text.change(function(e) {
                                that.newText = that.text.getText();
                            });
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_label must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            var text = this.get("text");
                            var size = this.get("size");
                            var font = this.get("font");
                            var fontColor = this.get("font_color");

                            var editable = this.get("editable");
                            this.text.setWidth(width);
                            this.text.setHeight(height);
                            this.text.setColor("rgba(" + fontColor.r + "," + fontColor.g + "," + fontColor.b + "," + 1.0 + ")");
                            
                            if (typeof(this.newText) !== "undefined") {
                                this.set("text", this.newText);
                                delete this.newText;
                            } else {
                                this.text.setText(text);
                            }

                            this.text.setFontSize(size);
                            this.text.setFont(font);
                            this.text.setEditable(editable);
                            this.text.draw();
                        }
                    },
                    "properties": [
                    {
                        "name": "text",
                        "type": "string",
                        "default": "Lorem Ipsum"
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "default": 12
                    },
                    {
                        "name": "font",
                        "type": "string",
                        "default": "Arial"
                    },
                    {
                        "name": "font_color",
                        "type": "color",
                        "default": {
                            "r": 0,
                            "g": 0,
                            "b": 0,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "editable",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_label",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_label",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_label",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_animation": {
                "category": "com_fezo_types_class",
                "description": "Animate through a sequence of images.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_animation",
                    "name": "Animation",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 128
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 128
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            var d = new Date();
                            this.lastFrameTime = d.getTime();
                        },
                        "draw": function() {
                            var d = new Date();
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_animation must be child of com_fezo_types_class_scene.")
                            }

                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");

                            var frameIdx = this.get("frame", "com_fezo_types_class_canvas_animation");
                            var collectionDataSource = this.get("image_assets", "com_fezo_types_class_canvas_animation");

                            if (this.isEditing) {
                                var image;
                                if (collectionDataSource.length > 0) {
                                    var property = collectionDataSource[0];
                                    var asset = property['default'];
                                    image = fezo.assetManager.get(asset, "com_fezo_types_class_canvas_image");
                                }
                                if (!image) {
                                    image = fezo.assetManager.get("default", "com_fezo_types_class_canvas_image");
                                }
                                scene.context2d.drawImage(image, 0, 0, width, height);
                                return;
                            }

                            var delay = this.get("delay");
                            var play = this.get("play");
                            var loop = this.get("loop");
                            if (loop) {
                                play = true;
                            }
                            if (play) {
                                var delta = d.getTime() - this.lastFrameTime;
                                if (delta > delay) {
                                    frameIdx++;
                                    this.set("frame", frameIdx, "com_fezo_types_class_canvas_animation");
                                    this.lastFrameTime = d.getTime();
                                    if (frameIdx >= collectionDataSource.length) {
                                        frameIdx = 0;
                                        this.set("frame", frameIdx, "com_fezo_types_class_canvas_animation");
                                        if (!loop) {
                                            this.set("play", false, "com_fezo_types_class_canvas_animation");
                                        }
                                    }
                                }
                            }
                            var property = collectionDataSource[frameIdx];
                            if (property.type == "asset") {
                                var asset = property['default'];
                                this.image = fezo.assetManager.get(asset, "com_fezo_types_class_canvas_image");
                                if (!this.image) {
                                    this.image = fezo.assetManager.get("default", "com_fezo_types_class_canvas_image");
                                }
                            }
                            if (typeof(this.image) != "undefined") {
                                scene.context2d.drawImage(this.image, 0, 0, width, height);
                            }
                        }
                    },
                    "properties": [
                    {
                        "name": "image_assets",
                        "type": "collection",
                        "subtype": "asset",
                        "default": ""
                    },
                    {
                        "name": "delay",
                        "type": "number",
                        "default": 250
                    },
                    {
                        "name": "play",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "loop",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "frame",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_animation",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_animation",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_animation",
                            "nodes": {}
                        },
                        "animationEnd": {
                            "id": createGUID(),
                            "name": "animationEnd",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_animation",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_text_field": {
                "category": "com_fezo_types_class",
                "description": "An editable text field that the user can input text..",
                "meta": {
                    "identifier": "com_fezo_types_class_text_field",
                    "name": "Text Field",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 120
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 20
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            var model = this;
                            this.text.change(function(e) {
                                var modelWidth = model.text.textWidth();
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_text_field", "title", model.titleText.getText());
                            });
                        },
                        "setup": function() {
                            this.text = new UIText(fezo.scene.context2d);
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_html_select must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            var text = this.get("text");
                            var fontColor = this.get("font_color");
                            var textFont = this.get("text_font");

                            scene.context2d.fillStyle = "rgba(255,255,255,1)";
                            scene.context2d.lineWidth = 1;
                            scene.context2d.strokeStyle = "rgba(0,0,0,0.8)";
                            roundRect(0, 0, width, height, 3, true, true);

                            this.text.setWidth(width);
                            this.text.setHeight(height);
                            var that = this;
                            this.text.change(function(e) {
                                that.newText = that.text.getText();
                            });
                            if (typeof(this.newText) !== "undefined") {
                                this.set("text", this.newText);

                                delete this.newText;
                            } else {
                                this.text.setText(text);
                            }
                            this.text.setFontSize(10);
                            this.text.setFont(textFont);
                            this.text.setAlign("left");
                            this.text.setPosition({
                                "left": 4,
                                "top": 6
                            });
                            this.text.setColor("rgba(" + fontColor.r + "," + fontColor.g + "," + fontColor.b + "," + 1.0 + ")");
                            this.text.draw();
                            this.text.setEditable(true);

                            function roundRect(x, y, width, height, radius, fill, stroke) {
                                if (typeof stroke == "undefined") {
                                    stroke = true;
                                }
                                if (typeof radius === "undefined") {
                                    radius = 5;
                                }
                                scene.context2d.beginPath();
                                scene.context2d.moveTo(x + radius, y);
                                scene.context2d.lineTo(x + width - radius, y);
                                scene.context2d.quadraticCurveTo(x + width, y, x + width, y + radius);
                                scene.context2d.lineTo(x + width, y + height - radius);
                                scene.context2d.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
                                scene.context2d.lineTo(x + radius, y + height);
                                scene.context2d.quadraticCurveTo(x, y + height, x, y + height - radius);
                                scene.context2d.lineTo(x, y + radius);
                                scene.context2d.quadraticCurveTo(x, y, x + radius, y);
                                scene.context2d.closePath();
                                if (stroke) {
                                    scene.context2d.stroke();
                                }
                                if (fill) {
                                    scene.context2d.fill();
                                }
                            }
                        }
                    },
                    "properties": [
                    {
                        "name": "font_color",
                        "type": "color",
                        "default": {
                            "r": 0,
                            "g": 0,
                            "b": 0,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "text",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "text_font",
                        "type": "string",
                        "default": "Helvetica"
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_title_bar": {
                "category": "com_fezo_types_class",
                "description": "Title Bar similar to that in iOS.",
                "meta": {
                    "identifier": "com_fezo_types_class_title_bar",
                    "name": "Title Bar",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 320
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 44
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            var model = this;
                            this.titleText.change(function(e) {
                                var modelWidth = model.titleText.textWidth();
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_title_bar", "title", model.titleText.getText());
                            });
                            this.titleText.setEditable(true);

                            this.rightButtonText.change(function(e) {
                                var modelWidth = model.rightButtonText.textWidth();
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_title_bar", "right_button_title", model.rightButtonText.getText());
                            });
                            this.rightButtonText.setEditable(true);
                        },
                        "setup": function() {
                            var model = this;
                            this.titleText = new UIText(fezo.scene.context2d);
                            this.rightButtonText = new UIText(fezo.scene.context2d);
                            fezo.scene.bind(model.identifiers.instanceIdentifier, "tap",
                            function(event) {
                                var rightButton = model.get("right_button");
                                var x = fezo.scene.canvas.width - 65;
                                var y = 10.0
                                var width = 60.0;
                                var height = 25.0;
                                var x2 = x + width;
                                var y2 = y + height;
                                if (rightButton && event.offsetX >= x && event.offsetX <= x2 && event.offsetY >= y && event.offsetY <= y2) {
                                    model.runControllerGroup("onTap", [event.offsetX, event.offsetY]);
                                }
                            });
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_html_select must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            var title = this.get("title");
                            var rightButtonTitle = this.get("right_button_title");
                            var rightButton = this.get("right_button");
                            
                            var tintColor = this.get("tint_color");
                            var fontColor = this.get("font_color");

                            var lingrad = scene.context2d.createLinearGradient(0, 0, 0, 44);
                            lingrad.addColorStop(0, "rgba(255,255,255,0.6)");
                            lingrad.addColorStop(0.023, "rgba(255,255,255,0.6)");
                            lingrad.addColorStop(0.023, "rgba(255,255,255,0.25)");
                            lingrad.addColorStop(0.49, "rgba(255,255,255,0.12)");
                            lingrad.addColorStop(0.51, "rgba(255,255,255,0.05)");
                            lingrad.addColorStop(0.97, "rgba(255,255,255,0.04)");
                            lingrad.addColorStop(0.97, "rgba(255,255,255,0.0)");
                            lingrad.addColorStop(1, "rgba(255,255,255,0.0)");

                            var lingrad2 = scene.context2d.createLinearGradient(0, 0, 0, 44);
                            lingrad2.addColorStop(0.0, "rgba(" + Math.floor(tintColor.r * 1.05) + "," + Math.floor(tintColor.g * 1.05) + "," + Math.floor(tintColor.b * 1.05) + "," + 1.0 + ")");
                            lingrad2.addColorStop(0.97, "rgba(" + Math.floor(tintColor.r * 0.95) + "," + Math.floor(tintColor.g * 0.95) + "," + Math.floor(tintColor.b * 0.95) + "," + 1.0 + ")");
                            lingrad2.addColorStop(0.97, "rgba(102,106,115,0.8)");
                            lingrad2.addColorStop(1, "rgba(102,106,115,0.8)");

                            scene.context2d.beginPath();
                            scene.context2d.rect(0, 0, scene.canvas.width, 44);
                            scene.context2d.fillStyle = lingrad2;
                            scene.context2d.fill();

                            scene.context2d.beginPath();
                            scene.context2d.rect(0, 0, scene.canvas.width, 44);
                            scene.context2d.fillStyle = lingrad;
                            scene.context2d.fill();

                            this.titleText.setWidth(scene.canvas.width);
                            this.titleText.setHeight(14);
                            var that = this;
                            this.titleText.change(function(e) {
                                that.newTitleText = that.titleText.getText();
                            });
                            if (typeof(this.newTitleText) !== "undefined") {
                                this.set("title", this.newTitleText);

                                delete this.newTitleText;
                            } else {
                                this.titleText.setText(title);
                            }
                            this.titleText.setFontSize(14);
                            this.titleText.setFont("Helvetica");
                            this.titleText.setStyle("bold");
                            this.titleText.setAlign("center");
                            this.titleText.setPosition({
                                "left": 0,
                                "top": (44 - this.titleText.fontSize) / 2
                            })
                            this.titleText.setColor("rgba(" + fontColor.r + "," + fontColor.g + "," + fontColor.b + "," + 1.0 + ")");
                            this.titleText.draw();

                            function roundRect(x, y, width, height, radius, fill, stroke) {
                                if (typeof stroke == "undefined") {
                                    stroke = true;
                                }
                                if (typeof radius === "undefined") {
                                    radius = 5;
                                }
                                scene.context2d.beginPath();
                                scene.context2d.moveTo(x + radius, y);
                                scene.context2d.lineTo(x + width - radius, y);
                                scene.context2d.quadraticCurveTo(x + width, y, x + width, y + radius);
                                scene.context2d.lineTo(x + width, y + height - radius);
                                scene.context2d.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
                                scene.context2d.lineTo(x + radius, y + height);
                                scene.context2d.quadraticCurveTo(x, y + height, x, y + height - radius);
                                scene.context2d.lineTo(x, y + radius);
                                scene.context2d.quadraticCurveTo(x, y, x + radius, y);
                                scene.context2d.closePath();
                                if (stroke) {
                                    scene.context2d.stroke();
                                }
                                if (fill) {
                                    scene.context2d.fill();
                                }
                            }
                            
                            if(rightButton){
                                scene.context2d.fillStyle = "rgba(" + Math.floor(tintColor.r * 0.85) + "," + Math.floor(tintColor.g * 0.85) + "," + Math.floor(tintColor.b * 0.85) + "," + 1.0 + ")";
                                scene.context2d.lineWidth = 1;
                                scene.context2d.strokeStyle = "rgba(0,0,0,0.5)";
                                roundRect(scene.canvas.width - 70, 10.0, 60, 25, 5, true, true);

                                var lingrad3 = scene.context2d.createLinearGradient(0, 0, 0, 44);
                                lingrad3.addColorStop(0.0, "rgba(255,255,255,0.3)");
                                lingrad3.addColorStop(0.5, "rgba(255,255,255,0.04)");
                                lingrad3.addColorStop(0.5, "rgba(255,0,0,0.0)");
                                lingrad3.addColorStop(1.0, "rgba(255,0,0,0.0)");

                                scene.context2d.fillStyle = lingrad3;
                                scene.context2d.lineWidth = 1;
                                roundRect(scene.canvas.width - 70, 10.0, 60, 25, 5, true, false);

                                var lingrad4 = scene.context2d.createLinearGradient(0, 0, 0, 44);
                                lingrad4.addColorStop(0.0, "rgba(" + Math.floor(tintColor.r * 0.2) + "," + Math.floor(tintColor.g * 0.2) + "," + Math.floor(tintColor.b * 0.2) + "," + 0.45 + ")");
                                lingrad4.addColorStop(0.5, "rgba(" + Math.floor(tintColor.r * 0.2) + "," + Math.floor(tintColor.g * 0.2) + "," + Math.floor(tintColor.b * 0.2) + "," + 0.25 + ")");
                                lingrad4.addColorStop(1.0, "rgba(" + Math.floor(tintColor.r * 0.2) + "," + Math.floor(tintColor.g * 0.2) + "," + Math.floor(tintColor.b * 0.2) + "," + 0.35 + ")");

                                scene.context2d.lineWidth = 1;
                                scene.context2d.strokeStyle = lingrad4;
                                roundRect(scene.canvas.width - 70, 10.0, 60.5, 25.5, 5, false, true);

                                var lingrad5 = scene.context2d.createLinearGradient(0, 0, 0, 44);
                                lingrad5.addColorStop(0.0, "rgba(255,255,255,0.0)");
                                lingrad5.addColorStop(1.0, "rgba(255,255,255,0.3)");

                                scene.context2d.lineWidth = 1;
                                scene.context2d.strokeStyle = lingrad5;
                                roundRect(scene.canvas.width - 71, 10.0, 62.5, 26.5, 5, false, true);

                                this.rightButtonText.setWidth(60);
                                this.rightButtonText.setHeight(10);
                                this.rightButtonText.change(function(e) {
                                    that.newRightButtonText = that.rightButtonText.getText();
                                });
                                if (typeof(this.newRightButtonText) !== "undefined") {
                                    this.set("right_button_title", this.newRightButtonText);

                                    delete this.newRightButtonText;
                                } else {
                                    this.rightButtonText.setText(rightButtonTitle);
                                }
                                this.rightButtonText.setFontSize(9);
                                this.rightButtonText.setFont("Helvetica");
                                this.rightButtonText.setAlign("center");
                                this.rightButtonText.setPosition({
                                    "left": scene.canvas.width - 70,
                                    "top": 18
                                });
                                this.rightButtonText.setColor("rgba(" + fontColor.r + "," + fontColor.g + "," + fontColor.b + "," + 1.0 + ")");
                                this.rightButtonText.draw();
                            }
                            
                        }
                    },
                    "properties": [
                    {
                        "name": "tint_color",
                        "type": "color",
                        "default": {
                            "r": 105,
                            "g": 135,
                            "b": 183,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "font_color",
                        "type": "color",
                        "default": {
                            "r": 255,
                            "g": 255,
                            "b": 255,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "default": "TitleBar"
                    },
                    {
                        "name": "right_button",
                        "type": "boolean",
                        "default": ""
                    },
                    {
                        "name": "right_button_title",
                        "type": "string",
                        "default": "Cancel"
                    },
                    {
                        "name": "back_button",
                        "type": "boolean",
                        "default": ""
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {}
                        },
                        "onTap": {
                            "id": createGUID(),
                            "name": "onTap",
                            "type": "client",
                            "composite": "com_fezo_types_class_title_bar",
                            "nodes": {
                                "com_fezo_types_class_title_bar_on_tap": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_title_bar_on_tap",
                                        "name": "Title Bar onTap",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_slider": {
                "category": "com_fezo_types_class",
                "description": "Slider is used to display or request a single numeric value out of a range of numeric values.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_slider",
                    "name": "Slider",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 118
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 23
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            this.slider = new UISlider(fezo.scene.context2d);
                            var model = this;
                            this.slider.valueChange(function(value, notify) {
                                model.set("value", value);
                                if (notify)
                                model.runControllerGroup("valueChange");
                            });
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_button must be child of com_fezo_types_class_scene.")
                            }

                            var value = this.get("value");
                            var maximumValue = this.get("maximumValue");
                            var minimumTrackTintColor = this.get("minimumTrackTintColor");
                            var maximumTrackTintColor = this.get("maximumTrackTintColor");
                            var interactionsEnabled = this.get("userInteractionsEnabled");
                            var width = this.get("width", "com_fezo_types_class_render");
                            var continuous = this.get("continuous");

                            if (this.slider.value != value) {
                                this.slider.setValue(value, true);
                            }

                            if (this.slider.maximumValue != maximumValue) {
                                this.slider.setMaximumValue(maximumValue);
                            }

                            this.slider.setMinimumTrackTintColor(minimumTrackTintColor);
                            this.slider.setMaximumTrackTintColor(maximumTrackTintColor);

                            if (this.slider.userInteractionsEnabled != interactionsEnabled) {
                                this.slider.setUserInteractionsEnabled(interactionsEnabled);
                            }

                            this.slider.setWidth(width);
                            this.slider.setContinuous(continuous);

                            this.slider.draw();
                        }
                    },
                    "properties": [
                    {
                        "name": "continuous",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "value",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "maximumValue",
                        "type": "number",
                        "default": 1.0
                    },
                    {
                        "name": "minimumTrackTintColor",
                        "type": "color",
                        "default": {
                            "r": 0,
                            "g": 127,
                            "b": 234,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "maximumTrackTintColor",
                        "type": "color",
                        "default": {
                            "r": 238,
                            "g": 238,
                            "b": 238,
                            "a": 1.0
                        }
                    },
                    {
                        "name": "userInteractionsEnabled",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_slider",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_slider",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_slider",
                            "nodes": {}
                        },
                        "valueChange": {
                            "id": createGUID(),
                            "name": "valueChange",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_slider",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_switch": {
                "category": "com_fezo_types_class",
                "description": "Switch for presenting user with on/off choice.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_switch",
                    "name": "Switch",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 79
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 27
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            this.switch = new UISwitch(fezo.scene.context2d);
                            var model = this;
                            this.switch.valueChange(function(on) {
                                model.set("on", on);
                                model.runControllerGroup("valueChange");
                            });
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_button must be child of com_fezo_types_class_scene.")
                            }
                            var on = this.get("on");
                            var onTintColor = this.get("onTintColor");

                            if (this.switch.on != on) {
                                this.switch.setOn(on, true);
                            }

                            this.switch.setOnTintColor(onTintColor);
                            this.switch.draw();
                        }
                    },
                    "properties": [
                    {
                        "name": "on",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "onTintColor",
                        "type": "color",
                        "default": {
                            "r": 0,
                            "g": 127,
                            "b": 234,
                            "a": 1.0
                        }
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_switch",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_switch",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_switch",
                            "nodes": {}
                        },
                        "valueChange": {
                            "id": createGUID(),
                            "name": "valueChange",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_switch",
                            "nodes": {}
                        }
                    }
                }
            },
            "com_fezo_types_class_cavas_tableview": {
                "category": "com_fezo_types_class",
                "description": "TableView for rendering a collection of data.",
                "meta": {
                    "identifier": "com_fezo_types_class_cavas_tableview",
                    "name": "TableView",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 320
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 480
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            this.tableView = new UITableView(fezo.scene.context2d);
                            var that = this;

                            this.tableView.titleForRowAtIndexPath(function(indexPath, callback) {
                                that.runControllerGroup("titleForRowAtIndexPath", [indexPath.section, indexPath.row],
                                function(title) {
                                    callback(title);
                                });
                            });

                            this.tableView.numberOfSections(function(callback) {
                                that.runControllerGroup("numberOfSections", [],
                                function(sections) {
                                    callback(sections);
                                });
                            });

                            this.tableView.numberOfRowsInSection(function(section, callback) {
                                that.runControllerGroup("numberOfRowsInSection", [section],
                                function(rows) {
                                    callback(rows);
                                });
                            });

                            this.tableView.titleForHeaderInSection(function(section, callback) {
                                that.runControllerGroup("titleForHeaderInSection", [section],
                                function(title) {
                                    callback(title);
                                });
                            });

                            this.tableView.didSelectRowAtIndexPath(function(indexPath) {
                                that.runControllerGroup("didSelectRowAtIndexPath", [indexPath, indexPath.section, indexPath.row]);
                            });

                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_button must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            this.tableView.setWidth(width);
                            this.tableView.setHeight(height);
                            this.tableView.draw();
                        }
                    },
                    "properties": [],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {}
                        },
                        "didSelectRowAtIndexPath": {
                            "id": createGUID(),
                            "name": "didSelectRowAtIndexPath",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {
                                "com_fezo_types_class_canvas_tableview_didSelectRowAtIndexPath": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_didSelectRowAtIndexPath",
                                        "name": "didSelectRowAtIndexPath",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "indexPath",
                                            "type": "var",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "indexPath.section",
                                            "type": "number",
                                            "port": 1,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "indexPath.row",
                                            "type": "number",
                                            "port": 2,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "titleForRowAtIndexPath": {
                            "id": createGUID(),
                            "name": "titleForRowAtIndexPath",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {
                                "com_fezo_types_class_canvas_tableview_titleForRowAtIndexPath": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_titleForRowAtIndexPath",
                                        "name": "titleForRowAtIndexPath",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "indexPath.section",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        },
                                        {
                                            "name": "indexPath.row",
                                            "type": "number",
                                            "port": 1,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_tableview_titleForRowAtIndexPath_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_titleForRowAtIndexPath_return",
                                        "name": "titleForRowAtIndexPath",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "title",
                                            "type": "string",
                                            "default":                     ""
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "numberOfSections": {
                            "id": createGUID(),
                            "name": "numberOfSections",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {
                                "com_fezo_types_class_canvas_tableview_numberOfSections_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_numberOfSections_return",
                                        "name": "numberOfSections",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "sections",
                                            "type": "number",
                                            "default":                     0
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "numberOfRowsInSection": {
                            "id": createGUID(),
                            "name": "numberOfRowsInSection",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {
                                "com_fezo_types_class_canvas_tableview_numberOfRowsInSection": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_numberOfRowsInSection",
                                        "name": "numberOfRowsInSection",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "section",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_tableview_numberOfRowsInSection_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_numberOfRowsInSection_return",
                                        "name": "numberOfRowsInSection",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "rows",
                                            "type": "number",
                                            "default":                     0
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "titleForHeaderInSection": {
                            "id": createGUID(),
                            "name": "titleForHeaderInSection",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_tableview",
                            "nodes": {
                                "com_fezo_types_class_canvas_tableview_titleForHeaderInSection": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_titleForHeaderInSection",
                                        "name": "titleForHeaderInSection",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "section",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_tableview_titleForHeaderInSection_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_tableview_titleForHeaderInSection_return",
                                        "name": "titleForHeaderInSection",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "title",
                                            "type": "string",
                                            "default":                     ""
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_iterator": {
                "category": "com_fezo_types_class",
                "description": "Iterator is a barebones mechanism for collection rendering.",
                "meta": {
                    "identifier": "com_fezo_types_class_iterator",
                    "name": "Iterator",
                    "type": "model",
                    "dependencies": [],
                    "dependenciesDefaults": [],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            this.collections = [];
                            this.collectionMeta = [];
                        },
                        "draw": function() {
                            
                        },
                        "update": function() {
                            var collection = this.get('collection');
                            if(collection){
                                this.currentCollection = collection;
                                this.collections.push(collection);
                                var isIterating = (_.size(collection) > 0)
                                this.collectionMeta.push({idx: 0, iterating: isIterating})
                                this.set('collection', null);
                            }
                            var that = this;
                            for(var collectionIdx in this.collections){
                                (function(idx){
                                    var collection = that.collections[idx];
                                    var meta = that.collectionMeta[idx];
                                    if(meta.iterating){
                                        var key;
                                        var invalidKey = false;
                                        if(Object.prototype.toString.call( collection ) === '[object Array]') {
                                            key = meta.idx;
                                        } else if ( Object.prototype.toString.call( collection ) === '[object Object]') {
                                            key = _.keys(collection)[meta.idx];
                                        } else {
                                            invalidKey = true;
                                        }
                                        if(!invalidKey){
                                            console.log('key ' + key)
                                            that.runControllerGroup("step", [key],
                                            function(_break) {
                                                if(!_break && meta.idx < _.size(collection)){
                                                    meta.iterating = true;
                                                } else {
                                                    if (collection !== that.currentCollection) {
                                                        that.collections.splice(that.collections.indexOf(collection), 1);
                                                        that.collectionMeta.splice(that.collectionMeta.indexOf(collectionMeta), 1);
                                                    }
                                                }
                                            });
                                            meta.idx++;
                                            meta.iterating = false;
                                        }
                                    }
                                })(collectionIdx);
                            }
                        }
                    },
                    "properties": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": null
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_iterator",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_iterator",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_iterator",
                            "nodes": {}
                        },
                        "step": {
                            "id": createGUID(),
                            "name": "step",
                            "type": "client",
                            "composite": "com_fezo_types_class_iterator",
                            "nodes": {
                                "com_fezo_types_class_iterator_step": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_iterator_step",
                                        "name": "step",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [
                                        {
                                            "name": "index",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_iterator_step_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_iterator_step_return",
                                        "name": "step return",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "break",
                                            "type": "boolean",
                                            "default": false
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "boolean",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_pickerview": {
                "category": "com_fezo_types_class",
                "description": "PickerView for presenting choices to users.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_pickerview",
                    "name": "PickerView",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 320
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 216
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                        },
                        "setup": function() {
                            this.pickerView = new UIPickerView(fezo.scene.context2d);
                            var that = this;

                            this.pickerView.titleForRow(function(row, component, callback) {
                                that.runControllerGroup("titleForRow", [row, component],
                                function(title) {
                                    callback(title);
                                });
                            });

                            this.pickerView.numberOfComponents(function(callback) {
                                that.runControllerGroup("numberOfComponents", [],
                                function(components) {
                                    callback(components);
                                });
                            });

                            this.pickerView.numberOfRowsInComponent(function(component, callback) {
                                that.runControllerGroup("numberOfRowsInComponent", [component],
                                function(rows) {
                                    callback(rows);
                                });
                            });

                            this.pickerView.didSelectRowInComponent(function(component, row) {
                                that.runControllerGroup("didSelectRowInComponent", [component, row]);
                            });

                            this.pickerView.rowSizeForComponent(function(component, callback) {
                                that.runControllerGroup("rowSizeForComponent", [component],
                                function(size) {
                                    callback(size);
                                });
                            });

                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_button must be child of com_fezo_types_class_scene.")
                            }
                            var width = this.get("width", "com_fezo_types_class_render");
                            this.pickerView.setWidth(width);
                            this.pickerView.draw();
                        }
                    },
                    "properties": [
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {}
                        },
                        "titleForRow": {
                            "id": createGUID(),
                            "name": "titleForRow",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {
                                "com_fezo_types_class_canvas_pickerview_titleForRow": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_titleForRow",
                                        "name": "titleForRow",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "row",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        },
                                        {
                                            "name": "component",
                                            "type": "number",
                                            "port": 1,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_pickerview_titleForRow_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_titleForRow_return",
                                        "name": "titleForRow",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "title",
                                            "type": "string",
                                            "default":                     ""
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "numberOfRowsInComponent": {
                            "id": createGUID(),
                            "name": "numberOfRowsInComponent",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {
                                "com_fezo_types_class_canvas_pickerview_numberOfRowsInComponent": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_numberOfRowsInComponent",
                                        "name": "numberOfRowsInComponent",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "component",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_pickerview_numberOfRowsInComponent_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_numberOfRowsInComponent_return",
                                        "name": "numberOfRowsInComponent",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "numberRows",
                                            "type": "number",
                                            "default":                     0
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "numberOfComponents": {
                            "id": createGUID(),
                            "name": "numberOfComponents",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {
                                "com_fezo_types_class_canvas_pickerview_numberOfComponents_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_numberOfComponents_return",
                                        "name": "numberOfComponents",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "numberComponents",
                                            "type": "number",
                                            "default":                     0
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback(%s)",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "rowSizeForComponent": {
                            "id": createGUID(),
                            "name": "rowSizeForComponent",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {
                                "com_fezo_types_class_canvas_pickerview_rowSizeForComponent": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_rowSizeForComponent",
                                        "name": "rowSizeForComponent",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "component",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": 0
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                },
                                "com_fezo_types_class_canvas_pickerview_rowSizeForComponent_return": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_rowSizeForComponent_return",
                                        "name": "rowSizeForComponent",
                                        "type": "consumer",
                                        "event": true,
                                        "inputs": [{
                                            "name": "rowSize.width",
                                            "type": "number",
                                            "default":                     0
                                        },
                                        {
                                            "name": "rowSize.height",
                                            "type": "number",
                                            "default":                     0
                                        }],
                                        "outputs": [{
                                            "name": "dummyOut",
                                            "type": "string",
                                            "template": "callback({width: %s, height: %s})",
                                            "connections": []
                                        }],
                                        "position": {
                                            "left": 500,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "didSelectRowInComponent": {
                            "id": createGUID(),
                            "name": "didSelectRowInComponent",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_pickerview",
                            "nodes": {
                                "com_fezo_types_class_canvas_pickerview_didSelectRowInComponent": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_pickerview_didSelectRowInComponent",
                                        "name": "didSelectRowInComponent",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "component",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "row",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_canvas_button": {
                "category": "com_fezo_types_class",
                "description": "Button with onTap event.",
                "meta": {
                    "identifier": "com_fezo_types_class_canvas_button",
                    "name": "Button",
                    "type": "model",
                    "dependencies": ["com_fezo_types_class_render"],
                    "dependenciesDefaults": [{
                        "component": "com_fezo_types_class_render",
                        "name": "width",
                        "default": 150
                    },
                    {
                        "component": "com_fezo_types_class_render",
                        "name": "height",
                        "default": 40
                    }],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "editorSetup": function() {
                            this.isEditing = true;
                            var model = this;
                            this.button.text.change(function(e) {
                                model.newText = model.button.text;
                            });
                        },
                        "setup": function() {
                            this.button = new UIButton(fezo.scene.context2d);
                            var model = this;
                            var that = this;
                            fezo.scene.bind(this.identifiers.instanceIdentifier, "touchDown",
                            function(event) {
                                if (!that.isEditing) {
                                    that.button.state = UIControl.stateHighlighted;
                                }
                            });
                            
                            var immediate = this.get("immediate");
                            
                            fezo.scene.bind(this.identifiers.instanceIdentifier, "touchUp",
                            function(event) {
                                if (!that.isEditing) {
                                    that.button.state = UIControl.stateNormal;
                                    model.runControllerGroup("onTap", [event.offsetX, event.offsetY], undefined, immediate);
                                }
                            });
                        },
                        "draw": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                alert("FeZo Error: com_fezo_types_class_canvas_button must be child of com_fezo_types_class_scene.")
                            }



                            var width = this.get("width", "com_fezo_types_class_render");
                            var height = this.get("height", "com_fezo_types_class_render");
                            var title = this.get("title");
                            
                            var model = this;
                            if (typeof(this.newText) !== "undefined") {
                                var modelWidth = Math.max(20, this.newText.textWidth() * 1.5);
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_canvas_button", "title", this.newText.getText());
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "width", modelWidth);
                                if (fezo.selectedModel === model) {
                                    var divs = document.getElementsByClassName("edgesDiv");
                                    if (divs.length > 0) {
                                        var edgesDiv1 = divs[0];
                                        var divs2 = document.getElementsByClassName("edgesDiv2");
                                        var edgesDiv2 = divs2[0];
                                        if (edgesDiv1 == edgesDiv2) {
                                            edgesDiv1 = divs[1];
                                        }
                                        edgesDiv1.style.width = (modelWidth + 4) + "px";
                                        edgesDiv2.style.width = (modelWidth + 2) + "px";
                                    }
                                }
                                this.set("title", this.newText.getText());
                                this.set("width", modelWidth, "com_fezo_types_class_render");

                                delete this.newText;
                            } else {
                                this.button.setTitle(title);
                            }

                            this.button.draw();
                            this.button.setWidth(width);
                            this.button.setHeight(height);
                        }
                    },
                    "properties": [
                    {
                        "name": "title",
                        "type": "string",
                        "default": "Submit"
                    },
                    {
                        "name": "immediate",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_button",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_button",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_button",
                            "nodes": {}
                        },
                        "onTap": {
                            "id": createGUID(),
                            "name": "onTap",
                            "type": "client",
                            "composite": "com_fezo_types_class_canvas_button",
                            "nodes": {
                                "com_fezo_types_class_canvas_button_on_tap": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_canvas_button_on_tap",
                                        "name": "Button onTap",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_render": {
                "category": "com_fezo_types_class",
                "description": "Tracks size, position, rotation and scale for your object.",
                "meta": {
                    "identifier": "com_fezo_types_class_render",
                    "name": "Render",
                    "type": "component",
                    "dependencies": [],
                    "children": [],
                    "tags": [],
                    "systemFunctions":
                    {
                        "destroy": function() {
                            if (fezo.selectedModel === this) {
                                var divs = document.getElementsByClassName("edgesDiv");
                                while (divs.length > 0) {
                                    document.body.removeChild(divs[0]);
                                }

                                document.removeEventListener("mousedown", this.onMouseDown);
                                document.removeEventListener("mousemove", this.onMouseMove);
                                document.removeEventListener("mouseup", this.onMouseUp);
                            }
                        },
                        "editorSetup": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                return;
                            }
                            var model = this;
                            var touchDownStartTime;
                            var touchDownStartPos;
                            var lastX;
                            var lastY;
                            function touchDown(event) {
                                var d = new Date();
                                touchDownStartTime = d.getTime();
                                touchDownStartPos = {
                                    x: event.offsetX,
                                    y: event.offsetY
                                };
                                lastX = event.offsetX;
                                lastY = event.offsetY;
                            }
                            scene.bind(model.identifiers.instanceIdentifier, "touchDown", touchDown);

                            var edgesDiv1 = null;
                            var edgesDiv2 = null;

                            var mouseDown = false;
                            var canResizeX = false;
                            var canResizeY = false;
                            var isResizing = false;

                            function touchDrag(event) {
                                if (mouseDown && (canResizeX || canResizeY)) {
                                    lastX = event.offsetX;
                                    lastY = event.offsetY;
                                    return;
                                }
                                var divs = document.getElementsByClassName("edgesDiv");
                                while (divs.length > 0) {
                                    document.body.removeChild(divs[0]);
                                }
                                for(var i in model.scene.allModels){
                                    document.removeEventListener("mousedown", model.scene.allModels[i].onMouseDown);
                                    document.removeEventListener("mousemove", model.scene.allModels[i].onMouseMove);
                                    document.removeEventListener("mouseup", model.scene.allModels[i].onMouseUp);
                                }

                                if (typeof(lastX) === "undefined" || typeof(lastY) === "undefined") {
                                    lastX = event.offsetX;
                                    lastY = event.offsetY;
                                }
                                var x1 = parseInt(model.get("x", "com_fezo_types_class_render"));
                                var y1 = parseInt(model.get("y", "com_fezo_types_class_render"));

                                var xDelta = event.offsetX - lastX;
                                var yDelta = event.offsetY - lastY;
                                var newX = x1 + parseInt(xDelta);
                                var newY = y1 + parseInt(yDelta);
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "x", newX);
                                parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "y", newY);
                                model.set("x", newX, "com_fezo_types_class_render");
                                model.set("y", newY, "com_fezo_types_class_render");
                                lastX = event.offsetX;
                                lastY = event.offsetY;

                                if (edgesDiv1 && edgesDiv2) {
                                    edgesDiv1.style.left = (newX - 3) + "px";
                                    edgesDiv1.style.top = (newY - 3) + "px";
                                    edgesDiv2.style.left = (newX - 4) + "px";
                                    edgesDiv2.style.top = (newY - 4) + "px";
                                }
                            }

                            scene.bind(model.identifiers.instanceIdentifier, "touchDrag", touchDrag);

                            this.onMouseMove = function(e) {
                                var x = parseInt(model.get("x", "com_fezo_types_class_render"));
                                var y = parseInt(model.get("y", "com_fezo_types_class_render"));
                                var width = parseInt(model.get("width", "com_fezo_types_class_render"))
                                var height = parseInt(model.get("height", "com_fezo_types_class_render"));
                                var rightOffset = width - e.offsetX;
                                var bottomOffset = height - e.offsetY;
                                var threshold = 8;

                                if (!isResizing) {
                                    if (Math.abs(rightOffset) <= threshold && Math.abs(bottomOffset) <= threshold) {
                                        edgesDiv1.style.cursor = "se-resize";
                                        canResizeX = true;
                                        canResizeY = true;
                                    } else if (Math.abs(rightOffset) <= threshold) {
                                        edgesDiv1.style.cursor = "e-resize";
                                        canResizeX = true;
                                        canResizeY = false;
                                    } else if (Math.abs(bottomOffset) <= threshold) {
                                        edgesDiv1.style.cursor = "s-resize";
                                        canResizeX = false;
                                        canResizeY = true;
                                    } else {
                                        edgesDiv1.style.cursor = "default";
                                        canResizeX = false;
                                        canResizeY = false;
                                    }
                                }

                                if (mouseDown) {
                                    var xDelta = event.offsetX - lastX;
                                    var yDelta = event.offsetY - lastY;


                                    var scale = 1.0;
                                    if (typeof(window.document.body.style["-webkit-transform"]) !== "undefined") {
                                        scale = parseFloat(window.document.body.style["-webkit-transform"].replace("scale(", "").replace(")", ""));
                                        if (isNaN(scale)) {
                                            scale = 1.0;
                                        }
                                    }

                                    var offsetX = e.pageX / scale;
                                    var offsetY = e.pageY / scale;

                                    if (canResizeX) {
                                        edgesDiv1.style.width = (offsetX - parseInt(edgesDiv1.style.left) + (threshold / 2) + 4) + "px";
                                        edgesDiv2.style.width = (offsetX - parseInt(edgesDiv2.style.left) + (threshold / 2) + 2) + "px";
                                        model.set("width", offsetX - parseInt(edgesDiv2.style.left) + (threshold / 2), "com_fezo_types_class_render");
                                        parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "width", offsetX - parseInt(edgesDiv2.style.left) + (threshold / 2));
                                        isResizing = true;
                                    }
                                    if (canResizeY) {
                                        edgesDiv1.style.height = (offsetY - parseInt(edgesDiv1.style.top) + (threshold / 2) + 4) + "px";
                                        edgesDiv2.style.height = (offsetY - parseInt(edgesDiv2.style.top) + (threshold / 2) + 2) + "px";
                                        model.set("height", offsetY - parseInt(edgesDiv2.style.top) + (threshold / 2), "com_fezo_types_class_render");
                                        parent.window.editor.sceneEditor.updateProperty(model.debugAddress, "com_fezo_types_class_render", "height", offsetY - parseInt(edgesDiv2.style.top) + (threshold / 2));
                                        isResizing = true;
                                    }
                                }

                            };

                            this.onMouseDown = function(e) {
                                var scale = 1.0;
                                if (typeof(window.document.body.style["-webkit-transform"]) !== "undefined") {
                                    scale = parseFloat(window.document.body.style["-webkit-transform"].replace("scale(", "").replace(")", ""));
                                    if (isNaN(scale)) {
                                        scale = 1.0;
                                    }
                                }

                                var offsetX = e.pageX / scale;
                                var offsetY = e.pageY / scale;

                                if(!model.scene.modelAtPos({x: offsetX, y: offsetY})){
                                    var divs = document.getElementsByClassName("edgesDiv");
                                    while (divs.length > 0) {
                                        document.body.removeChild(divs[0]);
                                    }
                                }

                                mouseDown = true;
                            }

                            this.onMouseUp = function(e) {
                                mouseDown = false;
                                isResizing = false;
                                edgesDiv1.style.cursor = "default";
                            }


                            scene.bind(model.identifiers.instanceIdentifier, "tap", function(event) {
                                var x = parseInt(model.get("x", "com_fezo_types_class_render"));
                                var y = parseInt(model.get("y", "com_fezo_types_class_render"));
                                var width = parseInt(model.get("width", "com_fezo_types_class_render"))
                                var height = parseInt(model.get("height", "com_fezo_types_class_render"));

                                var divs = document.getElementsByClassName("edgesDiv");
                                while (divs.length > 0) {
                                    document.body.removeChild(divs[0]);
                                }

                                for(var i in model.scene.allModels){
                                    document.removeEventListener("mousedown", model.scene.allModels[i].onMouseDown);
                                    document.removeEventListener("mousemove", model.scene.allModels[i].onMouseMove);
                                    document.removeEventListener("mouseup", model.scene.allModels[i].onMouseUp);
                                }

                                mouseDown = false;
                                isResizing = false;

                                edgesDiv1 = document.createElement("div");
                                edgesDiv1.className = "edgesDiv";
                                document.body.appendChild(edgesDiv1);
                                edgesDiv1.style.border = "1px dotted white";
                                edgesDiv1.style.position = "absolute";
                                edgesDiv1.style.left = (x - 3) + "px";
                                edgesDiv1.style.top = (y - 3) + "px";
                                edgesDiv1.style.width = (width + 4) + "px";
                                edgesDiv1.style.height = (height + 4) + "px";
                                edgesDiv1.style.zIndex = "10001"

                                edgesDiv2 = document.createElement("div");
                                edgesDiv2.className = "edgesDiv edgesDiv2";
                                document.body.appendChild(edgesDiv2);
                                edgesDiv2.style.border = "3px dotted blue";
                                edgesDiv2.style.position = "absolute";
                                edgesDiv2.style.left = (x - 4) + "px";
                                edgesDiv2.style.top = (y - 4) + "px";
                                edgesDiv2.style.width = (width + 2) + "px";
                                edgesDiv2.style.height = (height + 2) + "px";
                                edgesDiv1.style.zIndex = "10000"

                                fezo.selectedModel = model;

                                document.addEventListener("mousedown", model.onMouseDown);
                                document.addEventListener("mousemove", model.onMouseMove);
                                document.addEventListener("mouseup", model.onMouseUp);
                            });

                        },

                        "setup": function()
                        {
                            this.parentTransform = null;
                            if (this.parent.hasComponent("com_fezo_types_class_render"))
                            {
                                this.parentTransform = this.parent;
                            }
                        },

                        "preDraw": function()
                        {
                            if (this.parentTransform && typeof(this.matrix) == "undefined")
                            {
                                this.matrix = mat4.create(this.parentTransform.matrix);
                            } else if (typeof(this.matrix) == "undefined")
                            {
                                this.matrix = mat4.create();
                                mat4.identity(this.matrix);
                            } else
                            {
                                if (this.parentTransform)
                                {
                                    mat4.set(this.parentTransform.matrix, this.matrix);
                                }
                            }

                            this.properties["com_fezo_types_class_render"].currentVersion.x

                            mat4.translate(this.matrix, [this.get("x", "com_fezo_types_class_render"), this.get("y", "com_fezo_types_class_render"), this.get("z", "com_fezo_types_class_render")]);
                            mat4.rotateX(this.matrix, this.get("rotate_x", "com_fezo_types_class_render") * (Math.PI / 180));
                            mat4.rotateY(this.matrix, this.get("rotate_y", "com_fezo_types_class_render") * (Math.PI / 180));
                            mat4.rotateZ(this.matrix, this.get("rotate_z", "com_fezo_types_class_render") * (Math.PI / 180));
                            mat4.scale(this.matrix, [this.get("scale_x", "com_fezo_types_class_render"), this.get("scale_y", "com_fezo_types_class_render"), this.get("scale_z", "com_fezo_types_class_render")]);

                            var scene = this.parentWithClass("com_fezo_types_scene");
                            scene.context2d.setTransform(this.matrix[0], this.matrix[1], this.matrix[4], this.matrix[5], this.matrix[12], this.matrix[13]);
                            scene.context2d.matrix = this.matrix;
                            scene.contextHTML.x = this.matrix[12];
                            scene.contextHTML.y = this.matrix[13];
                        },

                        "postDraw": function() {
                            mat4.identity(this.matrix);
                        }
                    },
                    "properties": [
                    {
                        "name": "x",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "y",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "z",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "rotate_x",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "rotate_y",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "rotate_z",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "scale_x",
                        "type": "number",
                        "default": 1.0
                    },
                    {
                        "name": "scale_y",
                        "type": "number",
                        "default": 1.0
                    },
                    {
                        "name": "scale_z",
                        "type": "number",
                        "default": 1.0
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "hide",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "controllers": {
                        }
                }
            },
            "com_fezo_types_class_device_motion": {
                "category": "com_fezo_types_class",
                "description": "Detects device motion such as shake gestures and accelerometer input.",
                "meta": {
                    "identifier": "com_fezo_types_class_device_motion",
                    "name": "Device Motion",
                    "type": "component",
                    "dependencies": [],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "setup": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                if (this.identifier.className == "com_fezo_types_scene") {
                                    scene = this;
                                } else {
                                    alert("FeZo Error: com_fezo_types_class_device_motion must be child of com_fezo_types_class_scene.")
                                }
                            }
                            var model = this;
                            function deviceMotion(event) {
                                model.runControllerGroup("onDeviceMotion", [event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z]);
                            }
                            scene.bind(model.identifiers.instanceIdentifier, "devicemotion", deviceMotion);
                        }
                    },
                    "properties": [
                    ],
                    "controllers": {
                        "onDeviceMotion": {
                            "id": createGUID(),
                            "name": "onDeviceMotion",
                            "type": "client",
                            "composite": "com_fezo_types_class_device_motion",
                            "nodes": {
                                "com_fezo_types_class_device_motion_event": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_device_motion_event",
                                        "name": "Acceleration (w/ gravity)",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "z",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_class_touch_surface2d": {
                "category": "com_fezo_types_class",
                "description": "A 2D surface that responds to touch or mouse clicks.",
                "meta": {
                    "identifier": "com_fezo_types_class_touch_surface2d",
                    "name": "Touch Surface 2D",
                    "type": "component",
                    "dependencies": ["com_fezo_types_class_render"],
                    "children": [],
                    "tags": [],
                    "systemFunctions": {
                        "setup": function() {
                            var scene = this.parentWithClass("com_fezo_types_scene");
                            if (scene == null) {
                                if (this.identifier.className == "com_fezo_types_scene") {
                                    scene = this;
                                } else {
                                    alert("FeZo Error: com_fezo_types_class_touch_surface2d must be child of com_fezo_types_class_scene.")
                                }
                            }

                            var model = this;
                            var x1 = parseInt(model.get("x", "com_fezo_types_class_render"));
                            var y1 = parseInt(model.get("y", "com_fezo_types_class_render"));


                            scene.bind(model.identifiers.instanceIdentifier, "tap",
                            function(event) {
                                model.runControllerGroup("onTap", [event.offsetX, event.offsetY, event.offsetX - x1, event.offsetY - y1]);
                            });

                            scene.bind(model.identifiers.instanceIdentifier, "touchDown",
                            function(event) {
                                model.runControllerGroup("onTouchDown", [event.offsetX, event.offsetY, event.offsetX - x1, event.offsetY - y1]);
                            });

                            scene.bind(model.identifiers.instanceIdentifier, "touchDrag",
                            function(event) {
                                model.runControllerGroup("onDrag", [event.offsetX, event.offsetY, event.offsetX - x1, event.offsetY - y1]);
                            });

                            scene.bind(model.identifiers.instanceIdentifier, "touchUp",
                            function(event) {
                                model.runControllerGroup("onTouchUp", [event.offsetX, event.offsetY, event.offsetX - x1, event.offsetY - y1]);
                            });


                        }
                    },
                    "properties": [
                    ],
                    "controllers": {
                        "onTap": {
                            "id": createGUID(),
                            "name": "onTap",
                            "type": "client",
                            "composite": "com_fezo_types_class_touch_surface2d",
                            "nodes": {
                                "com_fezo_types_class_touch_surface2d_onTap": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_touch_surface2d_onTap",
                                        "name": "Tap Event",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "page_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "page_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[3]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "onTouchDown": {
                            "id": createGUID(),
                            "name": "onTouchDown",
                            "type": "client",
                            "composite": "com_fezo_types_class_touch_surface2d",
                            "nodes": {
                                "com_fezo_types_class_touch_surface2d_onTouchDown": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_touch_surface2d_onTouchDown",
                                        "name": "Touch Down Event",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "page_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "page_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[3]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "onDrag": {
                            "id": createGUID(),
                            "name": "onDrag",
                            "type": "client",
                            "composite": "com_fezo_types_class_touch_surface2d",
                            "nodes": {
                                "com_fezo_types_class_touch_surface2d_onDrag": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_touch_surface2d_onDrag",
                                        "name": "Drag Event",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "page_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "page_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[3]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        },
                        "onTouchUp": {
                            "id": createGUID(),
                            "name": "onTouchUp",
                            "type": "client",
                            "composite": "com_fezo_types_class_touch_surface2d",
                            "nodes": {
                                "com_fezo_types_class_touch_surface2d_onTouchUp": {
                                    "meta": {
                                        "identifier": "com_fezo_types_class_touch_surface2d_onTouchUp",
                                        "name": "Touch Up Event",
                                        "type": "active_producer",
                                        "event": true,
                                        "inputs": [],
                                        "outputs": [{
                                            "name": "page_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[0]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "page_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[1]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_x",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[2]",
                                            "connections": [],
                                            "default": ""
                                        },
                                        {
                                            "name": "surface_y",
                                            "type": "number",
                                            "port": 0,
                                            "template": "arguments[3]",
                                            "connections": [],
                                            "default": ""
                                        }],
                                        "position": {
                                            "left": 300,
                                            "top": 180
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "com_fezo_types_project": {
                "category": "com_fezo_types_project",
                "description": "A FeZo project.",
                "meta": {
                    "classes": [],
                    "identifier": "com_fezo_types_project",
                    "name": "Project",
                    "dependencies": [],
                    "type": "model",
                    "tags": [],
                    "systemFunctions": {},
                    "controllers": {},
                    "children": []
                }
            },
            "com_fezo_types_scene": {
                "category": "com_fezo_types_scene",
                "description": "A FeZo view.",
                "meta": {
                    "identifier": "com_fezo_types_scene",
                    "name": "View",
                    "dependencies": [],
                    "type": "model",
                    "tags": [],
                    "systemFunctions": {},
                    "properties": [
                    {
                        "name": "width",
                        "type": "string",
                        "default": "device"
                    },
                    {
                        "name": "height",
                        "type": "string",
                        "default": "device"
                    },
                    {
                        "name": "backgroundColor",
                        "type": "color",
                        "default": {
                            "r": 255,
                            "g": 255,
                            "b": 255,
                            "a": 1.0
                        }
                    }
                    ],
                    "systemFunctions": {
                        "draw": function() {
                            var color = this.get("backgroundColor");
                            var bgColor = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';
                            document.body.style.backgroundColor = bgColor;
                        }
                    },
                    "controllers": {
                        "setup": {
                            "id": createGUID(),
                            "name": "setup",
                            "type": "client",
                            "composite": "com_fezo_types_scene",
                            "nodes": {}
                        },
                        "update": {
                            "id": createGUID(),
                            "name": "update",
                            "type": "client",
                            "composite": "com_fezo_types_scene",
                            "nodes": {}
                        },
                        "destroy": {
                            "id": createGUID(),
                            "name": "destroy",
                            "type": "client",
                            "composite": "com_fezo_types_scene",
                            "nodes": {}
                        }
                    },
                    "children": []
                }
            }
        },
        "nodes": {
            "com_fezo_types_controller.ui_alert": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "This creates a alert dialog box with s1 as it's contents.",
                "meta": {
                    "identifier": "com_fezo_types_controller.ui_alert",
                    "name": "FeZo.alert",
                    "type": "consumer",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "alert(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.pickerview_reload_all_components": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Reloads all components of PickerView",
                "meta": {
                    "identifier": "com_fezo_types_controller.pickerview_reload_all_components",
                    "name": "PickerView.reloadAllComponents",
                    "type": "consumer",
                    "inputs": [
                    {
                        "name": "reload",
                        "type": "boolean",
                        "default": true
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "this.pickerView.reloadAllComponents(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.tableview_reload_data": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Reloads all data of TableView.",
                "meta": {
                    "identifier": "com_fezo_types_controller.tableview_reload_data",
                    "name": "TableView.reloadData",
                    "type": "consumer",
                    "inputs": [
                    {
                        "name": "reload",
                        "type": "boolean",
                        "default": true
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "this.tableView.reloadData(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.runController": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Runs another controller upon true condition after delay.",
                "meta": {
                    "identifier": "com_fezo_types_controller.runController",
                    "name": "FeZo.runController",
                    "type": "caller",
                    "nonActive": true,
                    "inputs": [
                    {
                        "name": "previous",
                        "type": "cp",
                        "default": ""
                    },
                    {
                        "name": "conditional",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "delay",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "controller",
                        "type": "controller",
                        "controller": true,
                        "default": null
                    }
                    ],
                    "outputs": [{
                        "name": "next",
                        "type": "cn",
                        "template": "this.fireEvent(&previous&, %s, %s, %s, prevArg, &args&, &argnames&)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.console_log": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Prints s1 and s2 to console log.",
                "meta": {
                    "identifier": "com_fezo_types_controller.console_log",
                    "name": "FeZo.log",
                    "type": "consumer",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "s2",
                        "type": "string",
                        "default": ""
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "console.log(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.instantiate_klass": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Creates an instance of a klass.",
                "meta": {
                    "identifier": "com_fezo_types_controller.instantiate_klass",
                    "name": "FeZo.instantiateKlass",
                    "type": "consumer",
                    "nonActive": true,
                    "inputs": [
                    {
                        "name": "condition",
                        "type": "boolean",
                        "default": "true"
                    },
                    {
                        "name": "instance",
                        "type": "model",
                        "default": "null"
                    },
                    {
                        "name": "parent",
                        "type": "model",
                        "default": "null"
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "var newKlass = this.instantiateKlass(%s, %s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.change_screen": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_fezo_project",
                "description": "Changes screen to specified screen.",
                "meta": {
                    "identifier": "com_fezo_types_controller.change_screen",
                    "name": "FeZo.changeScreen",
                    "type": "consumer",
                    "inputs": [
                    {
                        "name": "screen",
                        "type": "model",
                        "default": "null"
                    }
                    ],
                    "outputs": [{
                        "name": "dummyOut",
                        "type": "string",
                        "template": "fezo.changeScene(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.system_time": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_time",
                "description": "Produces the system time in milliseconds elapsed since the epoch.",
                "meta": {
                    "identifier": "com_fezo_types_controller.system_time",
                    "name": "Time.getTime",
                    "type": "producer",
                    "inputs": [],
                    "outputs": [{
                        "name": "time",
                        "type": "number",
                        "template": "function(){var d = new Date(); return d.getTime();}()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.system_frame_delta": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_time",
                "description": "Amount of milliseconds elapsed since last frame.",
                "meta": {
                    "identifier": "com_fezo_types_controller.system_frame_delta",
                    "name": "Time.getFrameDeltaTime",
                    "type": "producer",
                    "inputs": [],
                    "outputs": [
                    {
                        "name": "frame delta",
                        "type": "number",
                        "template": "new Date().getTime()-fezo.scene.lastFrameTime",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_param": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_params",
                "description": "Allows developer to define a collection type controller input param.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_param",
                    "name": "Param.collection",
                    "type": "active_producer",
                    "param": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "collection",
                        "template": "{}",
                        "port": 0,
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.number_param": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_params",
                "description": "Allows developer to define a number controller input param.",
                "meta": {
                    "identifier": "com_fezo_types_controller.number_param",
                    "name": "Param.number",
                    "type": "active_producer",
                    "param": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "number",
                        "template": "0",
                        "port": 0,
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_param": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_params",
                "description": "Allows developer to define a controller string input param.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_param",
                    "name": "Param.string",
                    "type": "active_producer",
                    "param": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "string",
                        "template": "",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.boolean_param": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_params",
                "description": "Allows developer to define a controller boolean input param.",
                "meta": {
                    "identifier": "com_fezo_types_controller.boolean_param",
                    "name": "Param.boolean",
                    "type": "active_producer",
                    "param": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "boolean",
                        "template": "false",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.range_param": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_params",
                "description": "Allows developer to define a controller range input param.",
                "meta": {
                    "identifier": "com_fezo_types_controller.range_param",
                    "name": "Param.range",
                    "type": "active_producer",
                    "param": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "range",
                        "template": "0..0",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.set_and_stay": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_constants",
                "description": "First time input is set, it stays for the remainder of the duration of the controller lifetime.",
                "meta": {
                    "identifier": "com_fezo_types_controller.set_and_stay",
                    "name": "Constant.setAndStay",
                    "type": "producer",
                    "event": true,
                    "inputs": [
                    {
                        "name": "set",
                        "type": "var",
                        "default": ""
                    }
                    ],
                    "outputs": [
                    {
                        "name": "stayed",
                        "type": "var",
                        "template": "this.setAndStay(\"&guid&\", %s)",
                        "connections": []
                    }
                    ]
                }
            },
            "com_fezo_types_controller.number_constant": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_constants",
                "description": "Allows developer to set a number constant.",
                "meta": {
                    "identifier": "com_fezo_types_controller.number_constant",
                    "name": "Constant.number",
                    "type": "terminal",
                    "constant": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "number",
                        "template": "0",
                        "port": 0,
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_constant": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_constants",
                "description": "Allows developer to set a arbitrary string constant.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_constant",
                    "name": "Constant.string",
                    "type": "terminal",
                    "constant": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "string",
                        "template": "",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.boolean_constant": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_constants",
                "description": "Allows developer to set a arbitrary boolean constant.",
                "meta": {
                    "identifier": "com_fezo_types_controller.boolean_constant",
                    "name": "Constant.boolean",
                    "type": "terminal",
                    "constant": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "boolean",
                        "template": "false",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.range_constant": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_controller_constants",
                "description": "Allows developer to set a arbitrary range constant.",
                "meta": {
                    "identifier": "com_fezo_types_controller.range_constant",
                    "name": "Constant.range",
                    "type": "terminal",
                    "constant": true,
                    "inputs": [],
                    "outputs": [{
                        "name": "",
                        "type": "range",
                        "template": "0..0",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_e": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "The E property returns the Euler's number and the base of natural logarithms, approximately 2.718.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_e",
                    "name": "Math.E",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "E",
                        "type": "number",
                        "template": "Math.E",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_pi": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns PI (approx. 3.14159)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_pi",
                    "name": "Math.PI",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.PI",
                        "type": "number",
                        "template": "Math.PI",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_sqrt2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the square root of 2 (approx. 1.414)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_sqrt2",
                    "name": "Math.SQRT2",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.SQRT2",
                        "type": "number",
                        "template": "Math.SQRT2",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_sqrt1_2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the square root of 1/2 (approx. 0.707)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_sqrt1_2",
                    "name": "Math.SQRT1_2",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.SQRT1_2",
                        "type": "number",
                        "template": "Math.SQRT1_2",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_ln2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the natural logarithm of 2 (approx. 0.693)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_ln2",
                    "name": "Math.LN2",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.LN2",
                        "type": "number",
                        "template": "Math.LN2",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_ln10": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the natural logarithm of 10 (approx. 2.302)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_ln10",
                    "name": "Math.LN10",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.LN10",
                        "type": "number",
                        "template": "Math.LN10",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_log2e": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the base-2 logarithm of E (approx. 1.442)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_log2e",
                    "name": "Math.LOG2E",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.LOG2E",
                        "type": "number",
                        "template": "Math.LOG2E",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_log10e": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the base-10 logarithm of E (approx. 0.434)",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_log10e",
                    "name": "Math.LOG10E",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Math.LOG10E",
                        "type": "number",
                        "template": "Math.LOG10E",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_max_value": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "The MAX_VALUE property has a value of approximately 1.79E+308. Values larger than MAX_VALUE are represented as 'Infinity'.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_max_value",
                    "name": "Number.MAX_VALUE",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Number.MAX_VALUE",
                        "type": "number",
                        "template": "Number.MAX_VALUE",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_min_value": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "The smallest positive representable number -- that is, the positive number closest to zero (without actually being zero).  The smallest negative representable number is -MIN_VALUE.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_min_value",
                    "name": "Number.MIN_VALUE",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Number.MIN_VALUE",
                        "type": "number",
                        "template": "Number.MIN_VALUE",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_nan": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Special 'not a number' value.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_nan",
                    "name": "Number.NaN",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Number.NaN",
                        "type": "number",
                        "template": "Number.NaN",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_positive_infinity": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Special value representing infinity; returned on overflow.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_positive_infinity",
                    "name": "Number.POSITIVE_INFINITY",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Number.POSITIVE_INFINITY",
                        "type": "number",
                        "template": "Number.POSITIVE_INFINITY",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_negative_infinity": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Special value representing negative infinity; returned on overflow.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_negative_infinity",
                    "name": "Number.NEGATIVE_INFINITY",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "Number.NEGATIVE_INFINITY",
                        "type": "number",
                        "template": "Number.NEGATIVE_INFINITY",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.newCollection": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Creates and returns new collection.",
                "meta": {
                    "identifier": "com_fezo_types_controller.newCollection",
                    "name": "Collection.create",
                    "type": "processor",
                    "inputs": [],
                    "outputs": [{
                        "name": "collection",
                        "type": "collection",
                        "template": "(function(){return {};})()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collectionInsert": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Inserts value into collection.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collectionInsert",
                    "name": "Collection.insert",
                    "type": "processor",
                    "inputs": [
                        {
                            "name": "collection",
                            "type": "collection",
                            "default": null
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "default": ""
                        },
                        {
                            "name": "value",
                            "type": "var",
                            "default": null
                        }
                    ],
                    "outputs": [{
                        "name": "collection",
                        "type": "collection",
                        "template": "(function(collection, key, value){if(_.isArray(collection)){collection.push(value);}else if(_.isObject(collection)){collection[key]=value;}return collection;})(%s, %s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.getCollectionValue": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Allows developer to fetch value from collection using JSON Path motation",
                "meta": {
                    "identifier": "com_fezo_types_controller.getCollectionValue",
                    "name": "Collection.getValue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "default": "/0"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "resolveJSONPointer(%s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.getCollectionSize": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Allows developer to fetch number of items in collection.",
                "meta": {
                    "identifier": "com_fezo_types_controller.getCollectionSize",
                    "name": "Collection.getSize",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.size(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_pluck": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Extracts a list of property values from list of objects.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_pluck",
                    "name": "Collection.pluck",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "propertyName",
                        "type": "string",
                        "default": ""
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.pluck(%s, %s) ",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_max": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "From a list of objects returns the object with the maximum value using JSON path to property for comparison.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_max",
                    "name": "Collection.max",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "default": "/0"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.max(%s, function(obj){return resolveJSONPointer(obj, %s)})",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_min": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "From a list of objects returns the object with the minimum value using JSON path to property for comparison.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_min",
                    "name": "Collection.min",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "default": "/0"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.min(%s, function(obj){return resolveJSONPointer(obj, %s)})",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_shuffle": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Returns a shuffled copy of the list, using a version of the Fisher-Yates shuffle.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_shuffle",
                    "name": "Collection.shuffle",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.shuffle(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_first": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Returns the first element of an list. Passing n will return the first n elements of the list.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_first",
                    "name": "Collection.first",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "n",
                        "type": "number",
                        "default": "undefined"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.first(%s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_last": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Returns the last element of an list. Passing n will return the last n elements of the list.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_last",
                    "name": "Collection.last",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    },
                    {
                        "name": "n",
                        "type": "number",
                        "default": 1
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "_.last(%s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_json_stringify": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Serializes a collection into JavaScript Object Notation (JSON) string.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_json_stringify",
                    "name": "Collection.stringify",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "JSON.stringify(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.collection_json_parse": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_collections",
                "description": "Deserializes JavaScript Object Notation (JSON) text to produce a collection.",
                "meta": {
                    "identifier": "com_fezo_types_controller.collection_json_parse",
                    "name": "Collection.parse",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "collection",
                        "type": "collection",
                        "default": "[]"
                    }
                    ],
                    "outputs": [{
                        "name": "value",
                        "type": "var",
                        "template": "JSON.parse(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_abs": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "the absolute value of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_abs",
                    "name": "Math.abs",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.abs(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_acos": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "arc cosine of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_acos",
                    "name": "Math.acos",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.acos(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_asin": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "arc sine of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_asin",
                    "name": "Math.asin",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.asin(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_atan": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "arc tangent of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_atan",
                    "name": "Math.atan",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.atan(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_ceil": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "integer closest to n1 and not less than n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_ceil",
                    "name": "Math.ceil",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.ceil(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_cos": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "cosine of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_cos",
                    "name": "Math.cos",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.cos(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_exp": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "exponent of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_exp",
                    "name": "Math.exp",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.exp(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_floor": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "integer closest to n1, not greater than n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_floor",
                    "name": "Math.floor",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.floor(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_log": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "log of a base n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_log",
                    "name": "Math.log",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "n1",
                        "type": "number",
                        "template": "Math.log(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_random": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "produces a random value",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_random",
                    "name": "Math.random",
                    "type": "producer",
                    "inputs": [],
                    "outputs": [{
                        "name": "x",
                        "type": "number",
                        "template": "Math.random()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_round": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "integer closest to n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_round",
                    "name": "Math.round",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.round(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_sin": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "sine of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_sin",
                    "name": "Math.sin",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.sin(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_sqrt": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "square root of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_sqrt",
                    "name": "Math.sqrt",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.sqrt(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_tan": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "tangent of n1",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_tan",
                    "name": "Math.tan",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.tan(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_add": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns sum of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_add",
                    "name": "Math.add",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "(%s+%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_subtract": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns difference of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_subtract",
                    "name": "Math.subtract",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "(%s-%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_multiply": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns product of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_multiply",
                    "name": "Math.multiply",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "(%s*%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_divide": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns quotient of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_divide",
                    "name": "Math.divide",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "(%s/%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.to_string": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns string representation of n1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.to_string",
                    "name": "Number.toString",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.toString()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_mod": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns remainder of n1 and n2",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_mod",
                    "name": "Math.mod",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.mod(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_max": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the maximum of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_max",
                    "name": "Math.max",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.max(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_min": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Return the minimum of n1 and n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_min",
                    "name": "Math.min",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.min(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_pow": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns n1 to the power of n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_pow",
                    "name": "Math.pow",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.pow(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.math_atan2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_math",
                "description": "Returns the arch tangent of angle n1 n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.math_atan2",
                    "name": "Math.atan2",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "Math.atan2(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_length": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the number of characters in string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_length",
                    "name": "String.length",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.length",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_charat": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the character at index n1 in string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_charat",
                    "name": "String.charAt",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.charAt(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_charcodeat": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the character code at index n1 in string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_charcodeat",
                    "name": "String.charCodeAt",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "%s.charCodeAt(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_concat": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Appends string s2 to the end of string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_concat",
                    "name": "String.concat",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "s2",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.toString().concat(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_indexof": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the index of s2 in s1 starting at index number n1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_indexof",
                    "name": "String.indexOf",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "s2",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "%s.indexOf(%s, %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_lastindexof": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the last index of string s2 in string s1 starting at number n1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_lastindexof",
                    "name": "String.lastIndexOf",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "s2",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "%s.lastIndexOf(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_match": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns an array of strings that match regex r1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_match",
                    "name": "String.match",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "r1",
                        "type": "regex",
                        "default": "/.+/g"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string[]",
                        "template": "%s.match(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_replace": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Replaces sub-string s2 with sub-string s3 in string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_replace",
                    "name": "String.replace",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "s2",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "s3",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.replace(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_replace_regex": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Replaces string matched from regex r1 with string s2 in string s1.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_replace_regex",
                    "name": "String.replaceRE",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "r1",
                        "type": "regex",
                        "default": "/.+/g"
                    },
                    {
                        "name": "r2",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.replace(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_search": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "This method returns the position of the match, or -1 if no match is found.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_search",
                    "name": "String.search",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "r1",
                        "type": "regex",
                        "default": "/.+/g"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "%s.search(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_slice": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Slice extracts the text from s1 starting at index n1 to index n2 and returns a new string.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_slice",
                    "name": "String.slice",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.slice(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_substr": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns the characters in string s1 beginning at the specified location n1 through the specified number of characters.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_substr",
                    "name": "String.substr",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.substr(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_substring": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns a subset of a string between one index n1 and index n2",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_substring2",
                    "name": "String.substring",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    },
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.substring(%s,%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_tolowercase": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns a new string in lower case.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_tolowercase",
                    "name": "String.toLowerCase",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.toLowerCase()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_touppercase": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Returns a new string in upper case.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_touppercase",
                    "name": "String.toUpperCase",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "string",
                        "template": "%s.toUpperCase()",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_parsefloat": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Parses a string and returns a floating point number.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_parsefloat",
                    "name": "String.parseFloat",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "parseFloat(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.string_parseint": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_string",
                "description": "Parses a string and returns integer number.",
                "meta": {
                    "identifier": "com_fezo_types_controller.string_parseint",
                    "name": "String.parseInt",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "s1",
                        "type": "string",
                        "default": "default"
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "number",
                        "template": "parseInt(%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_not_b1": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 is false.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_not_b1",
                    "name": "Conditional.isNotTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(!%s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_b1_and_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 and b2 are true.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_b1_and_b2",
                    "name": "Conditional.isTrueAndTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s && %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_b1_or_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 or b2 is true.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_b1_or_b2",
                    "name": "Conditional.isTrueOrTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s || %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_b1_xor_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 XOR b2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_b1_xor_b2",
                    "name": "Conditional.isTrueXorTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s ^ %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_not_b1_or_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 or b2 are false.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_not_b1_or_b2",
                    "name": "Conditional.isNotTrueAndTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "!(%s && %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_not_b1_and_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when both b1 and b2 are false.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_not_b1_and_b2",
                    "name": "Conditional.isNotTrueOrTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "!(%s || %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_b1_nxor_b2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when b1 NXOR b2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_b1_nxor_b2",
                    "name": "Conditional.isNotTrueXorTrue",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "b1",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "b2",
                        "type": "boolean",
                        "default": false
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "!(%s ^ %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_equals_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is equal to n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_equals_n2",
                    "name": "Conditional.equals",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s == %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_not_equals_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is not equal to n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_not_equals_n2",
                    "name": "Conditional.notEquals",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s != %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_smaller_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is smaller than n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_smaller_n2",
                    "name": "Conditional.smaller",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s < %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_smaller_equal_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is smaller or equal to n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_smaller_equal_n2",
                    "name": "Conditional.smallerEquals",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s <= %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_greater_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is greater than n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_greater_n2",
                    "name": "Conditional.greater",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s > %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.conditional_n1_greater_equal_n2": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Returns true when n1 is greater or equal to n2.",
                "meta": {
                    "identifier": "com_fezo_types_controller.conditional_n1_greater_equal_n2",
                    "name": "Conditional.greaterEquals",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "n1",
                        "type": "number",
                        "default": 0
                    },
                    {
                        "name": "n2",
                        "type": "number",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "result",
                        "type": "boolean",
                        "template": "(%s >= %s)",
                        "connections": []
                    }]
                }
            },
            "com_fezo_types_controller.demutiplexer_conditional": {
                "category": "com_fezo_types_controller",
                "toolbox": "com_fezo_toolbox_conditional",
                "description": "Outputs one of the following inputs based on a conditional.",
                "meta": {
                    "identifier": "com_fezo_types_controller.demutiplexer_conditional",
                    "name": "Conditional.demultiplexer",
                    "type": "processor",
                    "inputs": [
                    {
                        "name": "condition",
                        "type": "boolean",
                        "default": 0
                    },
                    {
                        "name": "on true",
                        "type": "var",
                        "default": 0
                    },
                    {
                        "name": "on false",
                        "type": "var",
                        "default": 0
                    }
                    ],
                    "outputs": [{
                        "name": "output",
                        "type": "var",
                        "template": "function(){var condition = %s; if(condition != \"false\" && (condition || condition == \"true\")){return %s}else{return %s}}.apply(this, arguments)",
                        "connections": []
                    }]
                }
            }
        }
    }
}